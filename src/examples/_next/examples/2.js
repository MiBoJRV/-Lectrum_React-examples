/**
 * –•—É–∫ useState –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
 * –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
 * –í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
 *
 * –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏-–∞–ø–¥–µ–π—Ç–µ—Ä–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –µ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä.
 * –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏-–∞–ø–¥–µ–π—Ç–µ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, —Ç–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∞ –Ω–µ –±—É–¥–µ—Ç.
 *
 * –ê—Ä–≥—É–º–µ–Ω—Ç useState(argument) ‚Äî —ç—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
 */
import { useState } from 'react';
import { render } from 'react-dom';

const Counter = () => {
    const [count, setCount] = useState(0);

    console.log('üñ• –†–µ–Ω–¥–µ—Ä!', count);

    return (
        <section className="counter">
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick={() => setCount(count - 1)}>-</button>
            <button onClick={() => setCount(0)}>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick={() => setCount(count + 1)}>+</button>
        </section>
    );
};

render(<Counter />, document.getElementById('root'));
