/**
 * –í—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç useEffect —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π.
 * –≠—Ç–æ –º–∞—Å—Å–∏–≤. –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π.
 * –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Ç–æ –∫–æ–ª–ª–±–µ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * –ê —Ñ—É–Ω–∫—Ü–∏—è-–æ—á–∏—Å—Ç–∏—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑ DOM.
 *
 * –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –≤ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ —Ñ–æ—Ä–º–∞ useEffect —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å–≤—è–∑–∫—É
 * componentDidMount + componentWillUnmount.
 */
import { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Parent = () => {
    const [count, setCount] = useState(0);

    const decrement = () => setCount(count - 1);
    const reset = () => setCount(0);
    const increment = () => setCount(count + 1);
    // const increment = () => {
    //     setCount((prevCount) => {
    //         console.log('‚åöÔ∏è setCount, count', count);
    //         console.log('‚åöÔ∏è setCount, prevCount', prevCount);

    //         return prevCount + 1;
    //     });
    // };

    useEffect(() => {
        const timer = setInterval(increment, 1000);

        console.log('‚è≥ useEffect');

        return () => {
            console.log('‚åõÔ∏è –û—á–∏—Å—Ç–∫–∞!');
            clearInterval(timer);
        };
    }, []);

    console.log('üñ• –†–µ–Ω–¥–µ—Ä!', count);

    return (
        <section className="counter">
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick={decrement}>-</button>
            <button onClick={reset}>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick={increment}>+</button>
        </section>
    );
};

render(<Parent />, document.getElementById('root'));
