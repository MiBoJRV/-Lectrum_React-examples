/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ useEffect.
 */
import { useState, useEffect } from 'react';
import { render } from 'react-dom';

const getInitialState = () => Number(localStorage.getItem('count')) || 0;

const Counter = () => {
    const [count1, setCount1] = useState(getInitialState);
    const [count2, setCount2] = useState(0);

    useEffect(() => {
        console.log('üì¶ –ó–∞–ø–∏—Å—å –≤ localStorage', count1);
        localStorage.setItem('count', count1);
    }, [count1]);

    return (
        <>
            <section className="counter counter-1">
                <h1>–ü–µ—Ä–≤—ã–π —Å—á—ë—Ç—á–∏–∫: {count1}</h1>
                <button onClick={() => setCount1(count1 - 1)}>-</button>
                <button onClick={() => setCount1(0)}>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick={() => setCount1(count1 + 1)}>+</button>
            </section>
            <section className="counter counter-2">
                <h1>–í—Ç–æ—Ä–æ–π —Å—á—ë—Ç—á–∏–∫: {count2}</h1>
                <button onClick={() => setCount2(count2 - 1)}>-</button>
                <button onClick={() => setCount2(0)}>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick={() => setCount2(count2 + 1)}>+</button>
            </section>
        </>
    );
};

render(<Counter />, document.getElementById('root'));
