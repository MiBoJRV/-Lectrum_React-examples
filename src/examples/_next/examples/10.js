/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ useEffect.
 */
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Counter = () => {
    const [count, setCount] = useState(0);

    useEffect(() => {
        console.log('‚úÖ –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.');

        return () => console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.');
    }, []);

    console.log('üñ• –†–µ–Ω–¥–µ—Ä!', count);

    return (
        <section>
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick={() => setCount(count - 1)}>-</button>
            <button onClick={() => setCount(0)}>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick={() => setCount(count + 1)}>+</button>
        </section>
    );
};

const Parent = () => {
    const [isMounted, setIsMounted] = useState(true);

    const buttonText = isMounted ? '–°–ø—Ä—è—Ç–∞—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å';

    return (
        <section className="counter">
            <button onClick={() => setIsMounted(!isMounted)}>
                {buttonText}
            </button>
            {isMounted && <Counter />}
        </section>
    );
};

render(<Parent />, document.getElementById('root'));
