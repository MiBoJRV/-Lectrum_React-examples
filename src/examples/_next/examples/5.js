/**
 * –•—É–∫ useEffect –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö React.
 * –í –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ useEffect –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–ª–±–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É —Å–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç–∞.
 *
 * –¢–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ:
 *   - —Ä–µ–Ω–¥–µ—Ä–∞;
 *   - –∫–æ–º–º–∏—Ç–∞ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ DOM;
 *   - –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º.
 *
 * –•—É–∫ useEffect –¥–µ–ª–∞–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ.
 */
import { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Counter = () => {
    const [count, setCount] = useState(0);

    const decrement = () => setCount(count - 1);
    const reset = () => setCount(0);
    const increment = () => setCount(count + 1);

    useEffect(() => {
        console.log('‚è≥ useEffect');
        setTimeout(increment, 1000);
    });

    console.log('üñ• –†–µ–Ω–¥–µ—Ä!');

    return (
        <section className="counter">
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <button onClick={decrement}>-</button>
            <button onClick={reset}>–û–±–Ω—É–ª–∏—Ç—å</button>
            <button onClick={increment}>+</button>
        </section>
    );
};

render(<Counter />, document.getElementById('root'));
